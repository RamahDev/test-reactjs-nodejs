/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../utils/context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Commande: { // root type
    commandeDetails?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    total?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user?: string | null; // String
  }
  CommandeDetails: { // root type
    commande?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    produit?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user?: string | null; // String
  }
  Comments: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    images?: string | null; // String
    text?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Contact: { // root type
    address?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    latitude?: string | null; // String
    logitude?: string | null; // String
    phone?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Portfolio: { // root type
    Attribute1?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Produit: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description?: string | null; // String
    id: string; // String!
    images?: string | null; // String
    name?: string | null; // String
    prix?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Query: {};
  User: { // root type
    access_token?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email?: string | null; // String
    id: string; // String!
    name?: string | null; // String
    password?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Commande: { // field return type
    commandeDetails: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    total: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user: string | null; // String
  }
  CommandeDetails: { // field return type
    commande: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    produit: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user: string | null; // String
  }
  Comments: { // field return type
    author: NexusGenRootTypes['User'] | null; // User
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    images: string | null; // String
    text: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Contact: { // field return type
    address: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    latitude: string | null; // String
    logitude: string | null; // String
    phone: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Portfolio: { // field return type
    Attribute1: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Produit: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description: string | null; // String
    id: string; // String!
    images: string | null; // String
    name: string | null; // String
    prix: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  User: { // field return type
    access_token: string | null; // String
    comments: NexusGenRootTypes['Comments'] | null; // Comments
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string | null; // String
    id: string; // String!
    name: string | null; // String
    password: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenFieldTypeNames {
  Commande: { // field return type name
    commandeDetails: 'String'
    createdAt: 'DateTime'
    id: 'String'
    total: 'String'
    updatedAt: 'DateTime'
    user: 'String'
  }
  CommandeDetails: { // field return type name
    commande: 'String'
    createdAt: 'DateTime'
    id: 'String'
    produit: 'String'
    updatedAt: 'DateTime'
    user: 'String'
  }
  Comments: { // field return type name
    author: 'User'
    createdAt: 'DateTime'
    id: 'String'
    images: 'String'
    text: 'String'
    updatedAt: 'DateTime'
  }
  Contact: { // field return type name
    address: 'String'
    createdAt: 'DateTime'
    id: 'String'
    latitude: 'String'
    logitude: 'String'
    phone: 'String'
    updatedAt: 'DateTime'
  }
  Portfolio: { // field return type name
    Attribute1: 'String'
    createdAt: 'DateTime'
    id: 'String'
    updatedAt: 'DateTime'
  }
  Produit: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    id: 'String'
    images: 'String'
    name: 'String'
    prix: 'String'
    updatedAt: 'DateTime'
  }
  User: { // field return type name
    access_token: 'String'
    comments: 'Comments'
    createdAt: 'DateTime'
    email: 'String'
    id: 'String'
    name: 'String'
    password: 'String'
    updatedAt: 'DateTime'
  }
}

export interface NexusGenArgTypes {
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}