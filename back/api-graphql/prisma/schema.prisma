
generator client {
  provider        = "prisma-client-js"
  // [review mongo]
  previewFeatures = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
} // [DATABASE_URL]


model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  access_token       String?   
  comments        Comments?
  name        String?   
  email        String?   
  password        String?   
}

model Comments {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?  @db.ObjectId
  text        String?   
  images        String?   
}

model Contact {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  address        String?   
  phone        String?   
  latitude        String?   
  logitude        String?   
}

model Commande {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        String?   
  commandeDetails        String?   
  total        String?   
}

model Portfolio {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Attribute1        String?   
}

model Produit {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String?   
  description        String?   
  prix        String?   
  images        String?   
}

model CommandeDetails {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        String?   
  produit        String?   
  commande        String?   
}

